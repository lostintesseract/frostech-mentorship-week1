/*The structure of Node

struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution{
  public:
    // returns the inorder successor of the Node x in BST (rooted at 'root')
    
    Node * inOrderSuccessor(Node *root, Node *x)
    {
        int succ=-1;
        int pred=-1;
        
        Node * temp= root;
        
        // find the key
        while(temp->data != x->data){
            if(temp->data > x->data){
                succ=temp->data;
                temp=temp->left;
            }
            else{
                pred=temp->data;
                temp=temp->right;
            }
        }
        
        // find the inorder succ
        Node *rightTree = temp->right;
        while(rightTree != NULL){
            succ=rightTree->data;
            rightTree=rightTree->left;
        }
        Node *succNode=new Node(succ);
        return succNode;
    }
};
